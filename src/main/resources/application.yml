app:
  jwt:
    secret: ${JWT_SECRET_KEY}
    expiration: ${JWT_ACCESS_EXPIRE}
    refresh-expiration: ${JWT_REFRESH_EXPIRE}

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  h2:
    console:
      enabled: true

  data:
    redis:
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
      ssl:
        enabled: true
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      client-type: jedis


security:
  # Brute Force Protection
  brute-force:
    max-attempts: 5
    lockout-duration: 15m
    reset-duration: 1h
    progressive-delay:
      enabled: true
      base-delay: 1s
      max-delay: 30s
      multiplier: 2.0

logging:
  level:
    com.nguyenhan.authbasedproject: DEBUG
    org.springframework.security: INFO
#  pattern:
#    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
#  file:
#    name: logs/security.log


management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized
